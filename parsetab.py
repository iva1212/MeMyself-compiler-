
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programanonassocLSTHANMRTHANLSETHANMRETHANleftPLUSMINUSleftTIMESDIVIDEAND ARCDOWN ARCUP CHAR CIRCLE CLEAR COLOR COMA DIVIDE DO DOUBLE ELSE EQUALS FLOAT FOR FUNC ID IF INT LBRACKET LEFT LINE LPAREN LSETHAN LSTHAN MAIN MINUS MODULE MRETHAN MRTHAN NOM_CHAR NOM_FLOAT NOM_INT NOT_EQUALS OR PENDOWN PENSIZE PENUP PLUS POINT PROGRAM RBRACKET READ RETURN RIGHT RPAREN SEMICOLON SETX SETY STRING THEN TIMES TO VAR VOID WHILE WRITEprograma : PROGRAM  inicio_programa agregar_cuad_main SEMICOLON vars funs MAIN LPAREN RPAREN completar_cuad_main bloque\n                | PROGRAM  inicio_programa agregar_cuad_main SEMICOLON vars MAIN LPAREN RPAREN completar_cuad_main bloque\n    inicio_programa : ID\n    vars : VAR vars2 \n            | emptyvars2 : tipo id_var SEMICOLON agregar_variable vars2\n             | tipo id_var SEMICOLON agregar_variable id_var : ID agregar_lstvar COMA id_var\n              | ID agregar_lstvartipo : NOM_INT\n            | NOM_FLOAT\n            | NOM_CHARtipo_func : VOID\n                 | NOM_INT\n                 | NOM_FLOAT\n                 | NOM_CHAR\n    funs : FUNC tipo_func funs2\n    funs2 : MODULE  ID agregar_funs LPAREN parametros RPAREN vars  bloque finalizar_funs\n             | MODULE  ID agregar_funs LPAREN parametros RPAREN vars  bloque finalizar_funs funs\n    parametros : tipo ID agregar_param COMA parametros\n                  | tipo ID agregar_param\n    bloque : LBRACKET bloque1 RBRACKET\n              | LBRACKET RBRACKET bloque1 : estatuto bloque1\n               | empty estatuto : asignacion\n                | modulo_v\n                | return\n                | lectura\n                | escritura\n                | desicion\n                | repeticion\n                | func_esp\n                asignacion : exp_var EQUALS agregar_exp_op expresion SEMICOLON agregar_cuad_asign\n     modulo_v : ID agregar_cuad_era LPAREN e RPAREN fin_func SEMICOLON\n                 | ID agregar_cuad_era LPAREN RPAREN fin_func SEMICOLON\n     return : RETURN LPAREN exp RPAREN SEMICOLON \n     lectura : READ LPAREN exp_var agregar_cuad_read lectura2\n     lectura2 : COMA exp_var agregar_cuad_read lectura2\n                 | RPAREN SEMICOLON\n     func_esp : func_esp_name_param   LPAREN exp RPAREN agregar_cuad_esp_param_func  SEMICOLON\n                 | func_esp_name_no_param   LPAREN RPAREN agregar_cuad_esp_no_param_func SEMICOLON\n                 | COLOR agregar_esp_func LPAREN exp COMA exp COMA exp RPAREN agregar_cuad_esp_param_func SEMICOLON\n     e : exp agregar_param_check  COMA e\n          | exp agregar_param_check\n    func_esp_name_param : LINE agregar_esp_func\n                     | POINT agregar_esp_func\n                     | CIRCLE agregar_esp_func\n                     | ARCUP agregar_esp_func\n                     | ARCDOWN agregar_esp_func\n                     | SETX agregar_esp_func\n                     | SETY agregar_esp_func\n                     | RIGHT agregar_esp_func\n                     | LEFT agregar_esp_func\n                     | PENSIZE agregar_esp_func\n    func_esp_name_no_param : PENUP agregar_esp_func\n                           | PENDOWN agregar_esp_func\n                           | CLEAR agregar_esp_func\n     escritura : WRITE LPAREN escritura2 RPAREN SEMICOLON\n    escritura2 : expresion agregar_cuad_print_exp COMA escritura2\n                  | STRING agregar_cuad_print_str COMA escritura2\n                  | expresion agregar_cuad_print_exp\n                  | STRING agregar_cuad_print_str\n    desicion : IF LPAREN expresion RPAREN agregar_cuad_if THEN bloque\n                | IF LPAREN expresion RPAREN agregar_cuad_if THEN bloque else\n    else : ELSE agregar_cuad_else bloque\n    var_cte : INT\n               | FLOAT\n               | CHAR\n    repeticion : condicional\n                  | no_condicional \n    condicional : WHILE agregar_while LPAREN expresion RPAREN agregar_while_cond DO bloque\n    no_condicional : FOR ID agregar_for_var EQUALS exp igualar_for_var TO exp agregar_for_cond DO bloque\n    expresion : exp_log  agregar_cuad_log\n                 | exp_log  agregar_cuad_log AND agregar_exp_op exp_log\n                 | exp_log  agregar_cuad_log OR agregar_exp_op exp_log\n                 | empty\n    exp_log   : exp  agregar_cuad_comp\n                 | exp  agregar_cuad_comp MRTHAN agregar_exp_op exp_log\n                 | exp  agregar_cuad_comp LSTHAN agregar_exp_op exp_log\n                 | exp  agregar_cuad_comp LSETHAN agregar_exp_op exp_log\n                 | exp  agregar_cuad_comp MRETHAN agregar_exp_op exp_log\n                 | exp  agregar_cuad_comp DOUBLE agregar_exp_op exp_log\n                 | exp  agregar_cuad_comp NOT_EQUALS agregar_exp_op exp_log\n    exp : termino agregar_cuad_arith\n           | termino agregar_cuad_arith PLUS agregar_exp_op exp\n           | termino agregar_cuad_arith MINUS agregar_exp_op exptermino : factor agregar_cuad_factor\n               | factor agregar_cuad_factor TIMES agregar_exp_op termino\n               | factor agregar_cuad_factor DIVIDE agregar_exp_op termino factor : factor_paren\n              | PLUS var_cte \n              | MINUS var_cte\n              | return_func\n              | var_cte \n              | exp_varfactor_paren : LPAREN agregar_exp_op expresion RPAREN  return_func : ID agregar_cuad_era LPAREN e RPAREN fin_func  exp_var : ID empty :agregar_funs : \n     agregar_param : empty  agregar_exp_op : empty  agregar_lstvar : empty agregar_variable : empty\n     agregar_cuad_main : empty completar_cuad_main : empty  agregar_cuad_log : empty agregar_cuad_comp : empty   agregar_cuad_arith : empty  agregar_cuad_factor : empty   agregar_cuad_asign : empty  agregar_cuad_read : empty  agregar_cuad_print_str : empty agregar_cuad_print_exp : empty agregar_cuad_if : empty  agregar_cuad_else : empty  agregar_for_var : empty  igualar_for_var : empty  agregar_for_cond : empty agregar_while : empty  agregar_while_cond : empty  finalizar_funs : empty  agregar_cuad_era : empty  agregar_param_check : empty  fin_func : empty  agregar_esp_func : empty agregar_cuad_esp_param_func : empty  agregar_cuad_esp_no_param_func : empty '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,43,48,50,88,],[0,-2,-1,-23,-22,]),'ID':([2,15,16,17,18,31,41,44,50,51,53,54,55,56,57,58,59,60,67,68,73,88,90,93,94,95,96,97,118,119,120,121,122,147,148,157,183,187,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,218,219,224,225,227,228,230,231,232,233,236,239,240,241,242,243,244,245,246,248,257,273,274,276,279,280,283,290,293,294,],[4,27,-10,-11,-12,38,27,62,-23,62,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,103,-22,-100,132,137,132,132,132,152,132,-103,132,-100,132,132,132,132,-100,-37,-100,-100,-100,-100,132,-38,137,-59,132,132,-100,-100,-100,-100,-100,-100,-100,-100,-42,132,-34,-112,-36,132,132,132,132,132,-40,132,132,132,132,132,132,132,132,-41,-35,-64,132,132,-39,-65,-72,-66,-43,-73,]),'SEMICOLON':([3,4,5,6,26,27,33,34,47,90,119,120,124,127,128,129,130,131,132,133,134,135,141,142,143,146,153,155,158,159,160,161,162,163,164,168,173,174,175,176,178,179,180,188,189,190,202,216,217,226,229,259,260,261,262,263,265,266,267,268,269,270,271,272,278,287,291,],[-100,-3,7,-106,32,-100,-9,-104,-8,-100,-100,-103,-100,-100,-91,-95,-94,-96,-99,-67,-68,-69,-100,-77,-100,-100,187,-100,194,-85,-110,-92,-93,-88,-111,203,-74,-108,-78,-109,-100,218,-129,-100,227,-126,236,248,-128,257,-97,-86,-87,-89,-90,-100,-75,-76,-79,-80,-81,-82,-83,-84,-98,-100,293,]),'VAR':([7,151,],[9,9,]),'MAIN':([7,8,10,11,14,30,32,39,40,46,50,88,222,254,255,277,],[-100,12,-5,19,-4,-17,-100,-7,-105,-6,-23,-22,-100,-18,-123,-19,]),'FUNC':([7,8,10,14,32,39,40,46,50,88,222,254,255,],[-100,13,-5,-4,-100,-7,-105,-6,-23,-22,-100,13,-123,]),'NOM_INT':([9,13,32,39,40,87,223,],[16,23,-100,16,-105,16,16,]),'NOM_FLOAT':([9,13,32,39,40,87,223,],[17,24,-100,17,-105,17,17,]),'NOM_CHAR':([9,13,32,39,40,87,223,],[18,25,-100,18,-105,18,18,]),'LBRACKET':([10,14,29,32,35,36,37,39,40,42,46,151,184,247,275,281,285,286,292,],[-5,-4,-100,-100,-100,44,-107,-7,-105,44,-6,-100,44,44,44,-100,44,-117,44,]),'LPAREN':([12,19,38,45,62,63,64,65,66,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,90,91,92,93,95,96,97,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,119,120,121,122,132,147,148,157,165,183,195,196,197,198,199,204,205,206,207,208,209,210,211,212,213,219,228,230,231,232,233,239,240,241,242,243,244,245,246,274,276,],[20,28,-101,87,-100,93,94,95,96,97,98,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,121,-124,122,122,122,122,147,-127,148,-121,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,122,-103,122,-100,-100,122,122,122,199,122,-100,-100,-100,-100,122,122,122,-100,-100,-100,-100,-100,-100,-100,-100,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'VOID':([13,],[22,]),'RPAREN':([20,28,95,96,98,117,120,121,122,123,124,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,152,154,156,157,159,160,161,162,163,164,166,167,169,170,171,172,173,174,175,176,182,185,186,190,191,192,193,204,205,229,234,235,237,238,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,278,282,],[29,35,-100,-100,146,151,-103,155,-100,158,-100,-100,-91,-95,-94,-96,-99,-67,-68,-69,-100,-99,168,-100,-100,-100,-77,-100,177,178,-100,-100,188,-100,-100,-85,-110,-92,-93,-88,-111,202,-113,-62,-115,-63,-114,-74,-108,-78,-109,220,-21,-102,-126,-45,-125,229,-100,-100,-97,263,-100,-60,-61,-20,-44,-86,-87,-89,-90,-100,202,-75,-76,-79,-80,-81,-82,-83,-84,-98,287,]),'MODULE':([21,22,23,24,25,],[31,-13,-14,-15,-16,]),'COMA':([27,33,34,95,124,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,152,156,159,160,161,162,163,164,166,167,169,170,171,172,173,174,175,176,181,185,186,190,191,192,204,205,229,235,249,259,260,261,262,263,264,265,266,267,268,269,270,271,272,278,],[-100,41,-104,-100,-100,-100,-91,-95,-94,-96,-99,-67,-68,-69,-100,-99,-100,-100,-100,-77,-100,-100,-100,-85,-110,-92,-93,-88,-111,201,-113,204,-115,205,-114,-74,-108,-78,-109,219,223,-102,-126,228,-125,-100,-100,-97,-100,274,-86,-87,-89,-90,-100,201,-75,-76,-79,-80,-81,-82,-83,-84,-98,]),'RBRACKET':([44,49,50,51,52,53,54,55,56,57,58,59,60,67,68,88,89,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[50,88,-23,-100,-25,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-24,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'RETURN':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[63,-23,63,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'READ':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[64,-23,64,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'WRITE':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[65,-23,65,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'IF':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[66,-23,66,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'COLOR':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[71,-23,71,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'WHILE':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[72,-23,72,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'FOR':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[73,-23,73,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'LINE':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[74,-23,74,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'POINT':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[75,-23,75,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'CIRCLE':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[76,-23,76,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'ARCUP':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[77,-23,77,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'ARCDOWN':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[78,-23,78,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'SETX':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[79,-23,79,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'SETY':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[80,-23,80,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'RIGHT':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[81,-23,81,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'LEFT':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[82,-23,82,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'PENSIZE':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[83,-23,83,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'PENUP':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[84,-23,84,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'PENDOWN':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[85,-23,85,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'CLEAR':([44,50,51,53,54,55,56,57,58,59,60,67,68,88,187,194,200,203,218,224,225,227,236,248,257,273,279,280,283,290,293,294,],[86,-23,86,-26,-27,-28,-29,-30,-31,-32,-33,-70,-71,-22,-100,-37,-38,-59,-42,-34,-112,-36,-40,-41,-35,-64,-39,-65,-72,-66,-43,-73,]),'ELSE':([50,88,273,],[-23,-22,281,]),'EQUALS':([61,62,103,149,150,],[90,-99,-100,183,-118,]),'PLUS':([90,93,95,96,97,119,120,121,122,124,127,128,129,130,131,132,133,134,135,147,148,157,159,160,161,162,163,164,183,190,195,196,197,198,199,204,205,206,207,208,209,210,211,212,213,219,228,229,230,231,232,233,239,240,241,242,243,244,245,246,261,262,263,274,276,278,],[-100,125,125,125,125,125,-103,125,-100,-100,-100,-91,-95,-94,-96,-99,-67,-68,-69,125,125,125,195,-110,-92,-93,-88,-111,125,-126,-100,-100,-100,-100,125,125,125,-100,-100,-100,-100,-100,-100,-100,-100,125,125,-97,125,125,125,125,125,125,125,125,125,125,125,125,-89,-90,-100,125,125,-98,]),'MINUS':([90,93,95,96,97,119,120,121,122,124,127,128,129,130,131,132,133,134,135,147,148,157,159,160,161,162,163,164,183,190,195,196,197,198,199,204,205,206,207,208,209,210,211,212,213,219,228,229,230,231,232,233,239,240,241,242,243,244,245,246,261,262,263,274,276,278,],[-100,126,126,126,126,126,-103,126,-100,-100,-100,-91,-95,-94,-96,-99,-67,-68,-69,126,126,126,196,-110,-92,-93,-88,-111,126,-126,-100,-100,-100,-100,126,126,126,-100,-100,-100,-100,-100,-100,-100,-100,126,126,-97,126,126,126,126,126,126,126,126,126,126,126,126,-89,-90,-100,126,126,-98,]),'INT':([90,93,95,96,97,119,120,121,122,125,126,147,148,157,183,195,196,197,198,199,204,205,206,207,208,209,210,211,212,213,219,228,230,231,232,233,239,240,241,242,243,244,245,246,274,276,],[-100,133,133,133,133,133,-103,133,-100,133,133,133,133,133,133,-100,-100,-100,-100,133,133,133,-100,-100,-100,-100,-100,-100,-100,-100,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'FLOAT':([90,93,95,96,97,119,120,121,122,125,126,147,148,157,183,195,196,197,198,199,204,205,206,207,208,209,210,211,212,213,219,228,230,231,232,233,239,240,241,242,243,244,245,246,274,276,],[-100,134,134,134,134,134,-103,134,-100,134,134,134,134,134,134,-100,-100,-100,-100,134,134,134,-100,-100,-100,-100,-100,-100,-100,-100,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'CHAR':([90,93,95,96,97,119,120,121,122,125,126,147,148,157,183,195,196,197,198,199,204,205,206,207,208,209,210,211,212,213,219,228,230,231,232,233,239,240,241,242,243,244,245,246,274,276,],[-100,135,135,135,135,135,-103,135,-100,135,135,135,135,135,135,-100,-100,-100,-100,135,135,135,-100,-100,-100,-100,-100,-100,-100,-100,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'STRING':([95,204,205,],[140,140,140,]),'MRTHAN':([124,127,128,129,130,131,132,133,134,135,143,159,160,161,162,163,164,175,176,190,229,259,260,261,262,263,278,],[-100,-100,-91,-95,-94,-96,-99,-67,-68,-69,-100,-85,-110,-92,-93,-88,-111,208,-109,-126,-97,-86,-87,-89,-90,-100,-98,]),'LSTHAN':([124,127,128,129,130,131,132,133,134,135,143,159,160,161,162,163,164,175,176,190,229,259,260,261,262,263,278,],[-100,-100,-91,-95,-94,-96,-99,-67,-68,-69,-100,-85,-110,-92,-93,-88,-111,209,-109,-126,-97,-86,-87,-89,-90,-100,-98,]),'LSETHAN':([124,127,128,129,130,131,132,133,134,135,143,159,160,161,162,163,164,175,176,190,229,259,260,261,262,263,278,],[-100,-100,-91,-95,-94,-96,-99,-67,-68,-69,-100,-85,-110,-92,-93,-88,-111,210,-109,-126,-97,-86,-87,-89,-90,-100,-98,]),'MRETHAN':([124,127,128,129,130,131,132,133,134,135,143,159,160,161,162,163,164,175,176,190,229,259,260,261,262,263,278,],[-100,-100,-91,-95,-94,-96,-99,-67,-68,-69,-100,-85,-110,-92,-93,-88,-111,211,-109,-126,-97,-86,-87,-89,-90,-100,-98,]),'DOUBLE':([124,127,128,129,130,131,132,133,134,135,143,159,160,161,162,163,164,175,176,190,229,259,260,261,262,263,278,],[-100,-100,-91,-95,-94,-96,-99,-67,-68,-69,-100,-85,-110,-92,-93,-88,-111,212,-109,-126,-97,-86,-87,-89,-90,-100,-98,]),'NOT_EQUALS':([124,127,128,129,130,131,132,133,134,135,143,159,160,161,162,163,164,175,176,190,229,259,260,261,262,263,278,],[-100,-100,-91,-95,-94,-96,-99,-67,-68,-69,-100,-85,-110,-92,-93,-88,-111,213,-109,-126,-97,-86,-87,-89,-90,-100,-98,]),'AND':([124,127,128,129,130,131,132,133,134,135,141,143,159,160,161,162,163,164,173,174,175,176,190,229,259,260,261,262,263,267,268,269,270,271,272,278,],[-100,-100,-91,-95,-94,-96,-99,-67,-68,-69,-100,-100,-85,-110,-92,-93,-88,-111,206,-108,-78,-109,-126,-97,-86,-87,-89,-90,-100,-79,-80,-81,-82,-83,-84,-98,]),'OR':([124,127,128,129,130,131,132,133,134,135,141,143,159,160,161,162,163,164,173,174,175,176,190,229,259,260,261,262,263,267,268,269,270,271,272,278,],[-100,-100,-91,-95,-94,-96,-99,-67,-68,-69,-100,-100,-85,-110,-92,-93,-88,-111,207,-108,-78,-109,-126,-97,-86,-87,-89,-90,-100,-79,-80,-81,-82,-83,-84,-98,]),'TO':([124,127,128,129,130,131,132,133,134,135,159,160,161,162,163,164,190,221,229,252,253,259,260,261,262,263,278,],[-100,-100,-91,-95,-94,-96,-99,-67,-68,-69,-85,-110,-92,-93,-88,-111,-126,-100,-97,276,-119,-86,-87,-89,-90,-100,-98,]),'DO':([124,127,128,129,130,131,132,133,134,135,159,160,161,162,163,164,190,220,229,250,251,259,260,261,262,263,278,284,288,289,],[-100,-100,-91,-95,-94,-96,-99,-67,-68,-69,-85,-110,-92,-93,-88,-111,-126,-100,-97,275,-122,-86,-87,-89,-90,-100,-98,-100,292,-120,]),'TIMES':([127,128,129,130,131,132,133,134,135,161,162,163,164,190,229,263,278,],[-100,-91,-95,-94,-96,-99,-67,-68,-69,-92,-93,197,-111,-126,-97,-100,-98,]),'DIVIDE':([127,128,129,130,131,132,133,134,135,161,162,163,164,190,229,263,278,],[-100,-91,-95,-94,-96,-99,-67,-68,-69,-92,-93,198,-111,-126,-97,-100,-98,]),'THEN':([177,214,215,],[-100,247,-116,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'inicio_programa':([2,],[3,]),'agregar_cuad_main':([3,],[5,]),'empty':([3,7,27,29,32,35,44,51,62,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,90,95,96,103,119,122,124,127,132,136,139,140,141,143,146,148,151,152,155,156,157,177,178,187,188,195,196,197,198,204,205,206,207,208,209,210,211,212,213,220,221,222,235,263,281,284,287,],[6,10,34,37,40,37,52,52,92,100,102,100,100,100,100,100,100,100,100,100,100,100,100,100,120,142,142,150,142,120,160,164,92,167,170,172,174,176,180,142,10,186,190,192,142,215,217,225,190,120,120,120,120,142,142,120,120,120,120,120,120,120,120,251,253,255,167,190,286,289,217,]),'vars':([7,151,],[8,184,]),'funs':([8,254,],[11,277,]),'vars2':([9,39,],[14,46,]),'tipo':([9,39,87,223,],[15,15,118,118,]),'tipo_func':([13,],[21,]),'id_var':([15,41,],[26,47,]),'funs2':([21,],[30,]),'agregar_lstvar':([27,],[33,]),'completar_cuad_main':([29,35,],[36,42,]),'agregar_variable':([32,],[39,]),'bloque':([36,42,184,247,275,285,292,],[43,48,222,273,283,290,294,]),'agregar_funs':([38,],[45,]),'bloque1':([44,51,],[49,89,]),'estatuto':([44,51,],[51,51,]),'asignacion':([44,51,],[53,53,]),'modulo_v':([44,51,],[54,54,]),'return':([44,51,],[55,55,]),'lectura':([44,51,],[56,56,]),'escritura':([44,51,],[57,57,]),'desicion':([44,51,],[58,58,]),'repeticion':([44,51,],[59,59,]),'func_esp':([44,51,],[60,60,]),'exp_var':([44,51,93,94,95,96,97,119,121,147,148,157,183,199,201,204,205,219,228,230,231,232,233,239,240,241,242,243,244,245,246,274,276,],[61,61,131,136,131,131,131,131,131,131,131,131,131,131,235,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'condicional':([44,51,],[67,67,]),'no_condicional':([44,51,],[68,68,]),'func_esp_name_param':([44,51,],[69,69,]),'func_esp_name_no_param':([44,51,],[70,70,]),'agregar_cuad_era':([62,132,],[91,165,]),'agregar_esp_func':([71,74,75,76,77,78,79,80,81,82,83,84,85,86,],[99,104,105,106,107,108,109,110,111,112,113,114,115,116,]),'agregar_while':([72,],[101,]),'parametros':([87,223,],[117,256,]),'agregar_exp_op':([90,122,195,196,197,198,206,207,208,209,210,211,212,213,],[119,157,230,231,232,233,239,240,241,242,243,244,245,246,]),'exp':([93,95,96,97,119,121,147,148,157,183,199,204,205,219,228,230,231,239,240,241,242,243,244,245,246,274,276,],[123,143,143,145,143,156,181,143,143,221,156,143,143,249,156,259,260,143,143,143,143,143,143,143,143,282,284,]),'termino':([93,95,96,97,119,121,147,148,157,183,199,204,205,219,228,230,231,232,233,239,240,241,242,243,244,245,246,274,276,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,261,262,124,124,124,124,124,124,124,124,124,124,]),'factor':([93,95,96,97,119,121,147,148,157,183,199,204,205,219,228,230,231,232,233,239,240,241,242,243,244,245,246,274,276,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'factor_paren':([93,95,96,97,119,121,147,148,157,183,199,204,205,219,228,230,231,232,233,239,240,241,242,243,244,245,246,274,276,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'var_cte':([93,95,96,97,119,121,125,126,147,148,157,183,199,204,205,219,228,230,231,232,233,239,240,241,242,243,244,245,246,274,276,],[129,129,129,129,129,129,161,162,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'return_func':([93,95,96,97,119,121,147,148,157,183,199,204,205,219,228,230,231,232,233,239,240,241,242,243,244,245,246,274,276,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'escritura2':([95,204,205,],[138,237,238,]),'expresion':([95,96,119,148,157,204,205,],[139,144,153,182,193,139,139,]),'exp_log':([95,96,119,148,157,204,205,239,240,241,242,243,244,245,246,],[141,141,141,141,141,141,141,265,266,267,268,269,270,271,272,]),'agregar_for_var':([103,],[149,]),'e':([121,199,228,],[154,234,258,]),'agregar_cuad_arith':([124,],[159,]),'agregar_cuad_factor':([127,],[163,]),'agregar_cuad_read':([136,235,],[166,264,]),'agregar_cuad_print_exp':([139,],[169,]),'agregar_cuad_print_str':([140,],[171,]),'agregar_cuad_log':([141,],[173,]),'agregar_cuad_comp':([143,],[175,]),'agregar_cuad_esp_no_param_func':([146,],[179,]),'agregar_param':([152,],[185,]),'fin_func':([155,188,263,],[189,226,278,]),'agregar_param_check':([156,],[191,]),'lectura2':([166,264,],[200,279,]),'agregar_cuad_if':([177,],[214,]),'agregar_cuad_esp_param_func':([178,287,],[216,291,]),'agregar_cuad_asign':([187,],[224,]),'agregar_while_cond':([220,],[250,]),'igualar_for_var':([221,],[252,]),'finalizar_funs':([222,],[254,]),'else':([273,],[280,]),'agregar_cuad_else':([281,],[285,]),'agregar_for_cond':([284,],[288,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM inicio_programa agregar_cuad_main SEMICOLON vars funs MAIN LPAREN RPAREN completar_cuad_main bloque','programa',11,'p_programa','parser.py',34),
  ('programa -> PROGRAM inicio_programa agregar_cuad_main SEMICOLON vars MAIN LPAREN RPAREN completar_cuad_main bloque','programa',10,'p_programa','parser.py',35),
  ('inicio_programa -> ID','inicio_programa',1,'p_inicio_programa','parser.py',42),
  ('vars -> VAR vars2','vars',2,'p_vars_start','parser.py',48),
  ('vars -> empty','vars',1,'p_vars_start','parser.py',49),
  ('vars2 -> tipo id_var SEMICOLON agregar_variable vars2','vars2',5,'p_vars_cycle','parser.py',52),
  ('vars2 -> tipo id_var SEMICOLON agregar_variable','vars2',4,'p_vars_cycle','parser.py',53),
  ('id_var -> ID agregar_lstvar COMA id_var','id_var',4,'p_id_var','parser.py',56),
  ('id_var -> ID agregar_lstvar','id_var',2,'p_id_var','parser.py',57),
  ('tipo -> NOM_INT','tipo',1,'p_tipo','parser.py',60),
  ('tipo -> NOM_FLOAT','tipo',1,'p_tipo','parser.py',61),
  ('tipo -> NOM_CHAR','tipo',1,'p_tipo','parser.py',62),
  ('tipo_func -> VOID','tipo_func',1,'p_tipo_func','parser.py',66),
  ('tipo_func -> NOM_INT','tipo_func',1,'p_tipo_func','parser.py',67),
  ('tipo_func -> NOM_FLOAT','tipo_func',1,'p_tipo_func','parser.py',68),
  ('tipo_func -> NOM_CHAR','tipo_func',1,'p_tipo_func','parser.py',69),
  ('funs -> FUNC tipo_func funs2','funs',3,'p_funs_start','parser.py',75),
  ('funs2 -> MODULE ID agregar_funs LPAREN parametros RPAREN vars bloque finalizar_funs','funs2',9,'p_funs_end','parser.py',78),
  ('funs2 -> MODULE ID agregar_funs LPAREN parametros RPAREN vars bloque finalizar_funs funs','funs2',10,'p_funs_end','parser.py',79),
  ('parametros -> tipo ID agregar_param COMA parametros','parametros',5,'p_parametros','parser.py',82),
  ('parametros -> tipo ID agregar_param','parametros',3,'p_parametros','parser.py',83),
  ('bloque -> LBRACKET bloque1 RBRACKET','bloque',3,'p_bloque_start','parser.py',87),
  ('bloque -> LBRACKET RBRACKET','bloque',2,'p_bloque_start','parser.py',88),
  ('bloque1 -> estatuto bloque1','bloque1',2,'p_bloque_end','parser.py',90),
  ('bloque1 -> empty','bloque1',1,'p_bloque_end','parser.py',91),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser.py',93),
  ('estatuto -> modulo_v','estatuto',1,'p_estatuto','parser.py',94),
  ('estatuto -> return','estatuto',1,'p_estatuto','parser.py',95),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','parser.py',96),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','parser.py',97),
  ('estatuto -> desicion','estatuto',1,'p_estatuto','parser.py',98),
  ('estatuto -> repeticion','estatuto',1,'p_estatuto','parser.py',99),
  ('estatuto -> func_esp','estatuto',1,'p_estatuto','parser.py',100),
  ('asignacion -> exp_var EQUALS agregar_exp_op expresion SEMICOLON agregar_cuad_asign','asignacion',6,'p_asignacion','parser.py',103),
  ('modulo_v -> ID agregar_cuad_era LPAREN e RPAREN fin_func SEMICOLON','modulo_v',7,'p_modulo_v','parser.py',106),
  ('modulo_v -> ID agregar_cuad_era LPAREN RPAREN fin_func SEMICOLON','modulo_v',6,'p_modulo_v','parser.py',107),
  ('return -> RETURN LPAREN exp RPAREN SEMICOLON','return',5,'p_return','parser.py',110),
  ('lectura -> READ LPAREN exp_var agregar_cuad_read lectura2','lectura',5,'p_lectura','parser.py',114),
  ('lectura2 -> COMA exp_var agregar_cuad_read lectura2','lectura2',4,'p_lectura_cyclo','parser.py',118),
  ('lectura2 -> RPAREN SEMICOLON','lectura2',2,'p_lectura_cyclo','parser.py',119),
  ('func_esp -> func_esp_name_param LPAREN exp RPAREN agregar_cuad_esp_param_func SEMICOLON','func_esp',6,'p_func_esp','parser.py',123),
  ('func_esp -> func_esp_name_no_param LPAREN RPAREN agregar_cuad_esp_no_param_func SEMICOLON','func_esp',5,'p_func_esp','parser.py',124),
  ('func_esp -> COLOR agregar_esp_func LPAREN exp COMA exp COMA exp RPAREN agregar_cuad_esp_param_func SEMICOLON','func_esp',11,'p_func_esp','parser.py',125),
  ('e -> exp agregar_param_check COMA e','e',4,'p_e','parser.py',128),
  ('e -> exp agregar_param_check','e',2,'p_e','parser.py',129),
  ('func_esp_name_param -> LINE agregar_esp_func','func_esp_name_param',2,'p_func_esp_name_param','parser.py',132),
  ('func_esp_name_param -> POINT agregar_esp_func','func_esp_name_param',2,'p_func_esp_name_param','parser.py',133),
  ('func_esp_name_param -> CIRCLE agregar_esp_func','func_esp_name_param',2,'p_func_esp_name_param','parser.py',134),
  ('func_esp_name_param -> ARCUP agregar_esp_func','func_esp_name_param',2,'p_func_esp_name_param','parser.py',135),
  ('func_esp_name_param -> ARCDOWN agregar_esp_func','func_esp_name_param',2,'p_func_esp_name_param','parser.py',136),
  ('func_esp_name_param -> SETX agregar_esp_func','func_esp_name_param',2,'p_func_esp_name_param','parser.py',137),
  ('func_esp_name_param -> SETY agregar_esp_func','func_esp_name_param',2,'p_func_esp_name_param','parser.py',138),
  ('func_esp_name_param -> RIGHT agregar_esp_func','func_esp_name_param',2,'p_func_esp_name_param','parser.py',139),
  ('func_esp_name_param -> LEFT agregar_esp_func','func_esp_name_param',2,'p_func_esp_name_param','parser.py',140),
  ('func_esp_name_param -> PENSIZE agregar_esp_func','func_esp_name_param',2,'p_func_esp_name_param','parser.py',141),
  ('func_esp_name_no_param -> PENUP agregar_esp_func','func_esp_name_no_param',2,'p_func_esp_name_no_param','parser.py',144),
  ('func_esp_name_no_param -> PENDOWN agregar_esp_func','func_esp_name_no_param',2,'p_func_esp_name_no_param','parser.py',145),
  ('func_esp_name_no_param -> CLEAR agregar_esp_func','func_esp_name_no_param',2,'p_func_esp_name_no_param','parser.py',146),
  ('escritura -> WRITE LPAREN escritura2 RPAREN SEMICOLON','escritura',5,'p_escritura_start','parser.py',149),
  ('escritura2 -> expresion agregar_cuad_print_exp COMA escritura2','escritura2',4,'p_escritura_cycle','parser.py',152),
  ('escritura2 -> STRING agregar_cuad_print_str COMA escritura2','escritura2',4,'p_escritura_cycle','parser.py',153),
  ('escritura2 -> expresion agregar_cuad_print_exp','escritura2',2,'p_escritura_cycle','parser.py',154),
  ('escritura2 -> STRING agregar_cuad_print_str','escritura2',2,'p_escritura_cycle','parser.py',155),
  ('desicion -> IF LPAREN expresion RPAREN agregar_cuad_if THEN bloque','desicion',7,'p_decision','parser.py',158),
  ('desicion -> IF LPAREN expresion RPAREN agregar_cuad_if THEN bloque else','desicion',8,'p_decision','parser.py',159),
  ('else -> ELSE agregar_cuad_else bloque','else',3,'p_desicion_else','parser.py',163),
  ('var_cte -> INT','var_cte',1,'p_var_cte','parser.py',167),
  ('var_cte -> FLOAT','var_cte',1,'p_var_cte','parser.py',168),
  ('var_cte -> CHAR','var_cte',1,'p_var_cte','parser.py',169),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','parser.py',182),
  ('repeticion -> no_condicional','repeticion',1,'p_repeticion','parser.py',183),
  ('condicional -> WHILE agregar_while LPAREN expresion RPAREN agregar_while_cond DO bloque','condicional',8,'p_condicional','parser.py',186),
  ('no_condicional -> FOR ID agregar_for_var EQUALS exp igualar_for_var TO exp agregar_for_cond DO bloque','no_condicional',11,'p_no_condicional','parser.py',190),
  ('expresion -> exp_log agregar_cuad_log','expresion',2,'p_expresion','parser.py',194),
  ('expresion -> exp_log agregar_cuad_log AND agregar_exp_op exp_log','expresion',5,'p_expresion','parser.py',195),
  ('expresion -> exp_log agregar_cuad_log OR agregar_exp_op exp_log','expresion',5,'p_expresion','parser.py',196),
  ('expresion -> empty','expresion',1,'p_expresion','parser.py',197),
  ('exp_log -> exp agregar_cuad_comp','exp_log',2,'p_exp_log','parser.py',200),
  ('exp_log -> exp agregar_cuad_comp MRTHAN agregar_exp_op exp_log','exp_log',5,'p_exp_log','parser.py',201),
  ('exp_log -> exp agregar_cuad_comp LSTHAN agregar_exp_op exp_log','exp_log',5,'p_exp_log','parser.py',202),
  ('exp_log -> exp agregar_cuad_comp LSETHAN agregar_exp_op exp_log','exp_log',5,'p_exp_log','parser.py',203),
  ('exp_log -> exp agregar_cuad_comp MRETHAN agregar_exp_op exp_log','exp_log',5,'p_exp_log','parser.py',204),
  ('exp_log -> exp agregar_cuad_comp DOUBLE agregar_exp_op exp_log','exp_log',5,'p_exp_log','parser.py',205),
  ('exp_log -> exp agregar_cuad_comp NOT_EQUALS agregar_exp_op exp_log','exp_log',5,'p_exp_log','parser.py',206),
  ('exp -> termino agregar_cuad_arith','exp',2,'p_exp','parser.py',209),
  ('exp -> termino agregar_cuad_arith PLUS agregar_exp_op exp','exp',5,'p_exp','parser.py',210),
  ('exp -> termino agregar_cuad_arith MINUS agregar_exp_op exp','exp',5,'p_exp','parser.py',211),
  ('termino -> factor agregar_cuad_factor','termino',2,'p_termino','parser.py',213),
  ('termino -> factor agregar_cuad_factor TIMES agregar_exp_op termino','termino',5,'p_termino','parser.py',214),
  ('termino -> factor agregar_cuad_factor DIVIDE agregar_exp_op termino','termino',5,'p_termino','parser.py',215),
  ('factor -> factor_paren','factor',1,'p_factor','parser.py',217),
  ('factor -> PLUS var_cte','factor',2,'p_factor','parser.py',218),
  ('factor -> MINUS var_cte','factor',2,'p_factor','parser.py',219),
  ('factor -> return_func','factor',1,'p_factor','parser.py',220),
  ('factor -> var_cte','factor',1,'p_factor','parser.py',221),
  ('factor -> exp_var','factor',1,'p_factor','parser.py',222),
  ('factor_paren -> LPAREN agregar_exp_op expresion RPAREN','factor_paren',4,'p_factor_paren','parser.py',224),
  ('return_func -> ID agregar_cuad_era LPAREN e RPAREN fin_func','return_func',6,'p_return_func','parser.py',227),
  ('exp_var -> ID','exp_var',1,'p_exp_var','parser.py',230),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',235),
  ('agregar_funs -> <empty>','agregar_funs',0,'p_agregar_funs','parser.py',239),
  ('agregar_param -> empty','agregar_param',1,'p_agregar_param','parser.py',247),
  ('agregar_exp_op -> empty','agregar_exp_op',1,'p_agregar_exp_op','parser.py',257),
  ('agregar_lstvar -> empty','agregar_lstvar',1,'p_agregar_var','parser.py',260),
  ('agregar_variable -> empty','agregar_variable',1,'p_agregar_variable','parser.py',267),
  ('agregar_cuad_main -> empty','agregar_cuad_main',1,'p_agregar_cuad_main','parser.py',277),
  ('completar_cuad_main -> empty','completar_cuad_main',1,'p_completar_cuad_main','parser.py',280),
  ('agregar_cuad_log -> empty','agregar_cuad_log',1,'p_agregar_cuad_log','parser.py',284),
  ('agregar_cuad_comp -> empty','agregar_cuad_comp',1,'p_agregar_cuad_comp','parser.py',287),
  ('agregar_cuad_arith -> empty','agregar_cuad_arith',1,'p_agregar_cuad_arith','parser.py',290),
  ('agregar_cuad_factor -> empty','agregar_cuad_factor',1,'p_agregar_cuad_factor','parser.py',293),
  ('agregar_cuad_asign -> empty','agregar_cuad_asign',1,'p_agregar_cuad_asign','parser.py',296),
  ('agregar_cuad_read -> empty','agregar_cuad_read',1,'p_agregar_cuad_read','parser.py',299),
  ('agregar_cuad_print_str -> empty','agregar_cuad_print_str',1,'p_agregar_cuad_print_str','parser.py',302),
  ('agregar_cuad_print_exp -> empty','agregar_cuad_print_exp',1,'p_agregar_cuad_print_exp','parser.py',305),
  ('agregar_cuad_if -> empty','agregar_cuad_if',1,'p_agregar_cuad_if','parser.py',308),
  ('agregar_cuad_else -> empty','agregar_cuad_else',1,'p_agregar_cuad_else','parser.py',311),
  ('agregar_for_var -> empty','agregar_for_var',1,'p_agregar_for_var','parser.py',314),
  ('igualar_for_var -> empty','igualar_for_var',1,'p_igualar_for_var','parser.py',317),
  ('agregar_for_cond -> empty','agregar_for_cond',1,'p_agregar_for_cond','parser.py',320),
  ('agregar_while -> empty','agregar_while',1,'p_agregar_while','parser.py',323),
  ('agregar_while_cond -> empty','agregar_while_cond',1,'p_agregar_while_cond','parser.py',326),
  ('finalizar_funs -> empty','finalizar_funs',1,'p_finalizar_funs','parser.py',329),
  ('agregar_cuad_era -> empty','agregar_cuad_era',1,'p_agregar_cuad_Era','parser.py',332),
  ('agregar_param_check -> empty','agregar_param_check',1,'p_agregar_param_check','parser.py',341),
  ('fin_func -> empty','fin_func',1,'p_fin_func','parser.py',346),
  ('agregar_esp_func -> empty','agregar_esp_func',1,'p_agregar_esp_func','parser.py',353),
  ('agregar_cuad_esp_param_func -> empty','agregar_cuad_esp_param_func',1,'p_agregar_cuad_esp_func','parser.py',356),
  ('agregar_cuad_esp_no_param_func -> empty','agregar_cuad_esp_no_param_func',1,'p_agregar_cuad_esp_no_param_func','parser.py',359),
]
